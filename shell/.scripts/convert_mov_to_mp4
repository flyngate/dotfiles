#!/usr/bin/env perl
use strict;
use warnings;
use Cwd 'abs_path';
use File::Basename;

sub list_files_with_extension() {
	my $raw_dir = shift or die "no directory specified";
	my $extension = shift;
	my $dir = abs_path($raw_dir);
	opendir(dir_handle, $dir) or die "Can't open $raw_dir";
	my @files = readdir(dir_handle);
	closedir(dir_handle);
	if ($extension) {
		grep { /\.\Q$extension\E$/i } @files;
	} else {
		@files;
	}
}

sub is_vertical_video() {
	my $path = shift;
	my @output = `ffprobe "$path" 2>&1`;
	join('', @output) =~ /rotate\s*:\s*90/;
}

sub encode_to_mp4() {
	my ($src, $dest) = @_;
	my $scale = &is_vertical_video($src) ? "720:-1" : "-1:720";
	`ffmpeg -y -i "$src" \\
	        -c:v libx264 -preset slow -crf 22 -vf scale=$scale \\
					-c:a aac "$dest"`;
}

if (not defined $ARGV[0]) {
  die "Usage: ./convert_mov_to_mp4 <dir>\n";
}

my $raw_dir = $ARGV[0];
my $dir = abs_path($raw_dir);
my $dest_dir = "$dir/CONVERTED";

my @mov_files = sort(&list_files_with_extension($dir, "mov"));

if (not -d $dest_dir) {
  mkdir $dest_dir or die "Can't create $dest_dir";	
}

foreach my $name (@mov_files) {
  my $src = "$dir/$name";
  my $dest = $dest_dir . "/" . ($name =~ s/mov$/mp4/igr);
	&encode_to_mp4($src, $dest);
}

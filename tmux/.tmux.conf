# remap prefix to Control + a
# set -g prefix2 C-a
# unbind C-b
# bind C-a send-prefix

set-option -g default-terminal "screen-256color"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display "Reloaded."

# quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+

# start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# sort sessions by name instead of index
bind s choose-tree -s -O name

# tmux uses ${SHELL} -l to run a new session
# by default which is slow
set -g default-command "${SHELL}"

# fixes escape in neovim
set -g escape-time 0

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# smart pane switching with awareness of vim splits.
# see: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

bind -r H resize-pane -L 4
bind -r J resize-pane -D 4
bind -r K resize-pane -U 4
bind -r L resize-pane -R 4

# quick switching between windows with alt + number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# status line appearance
set -g status-fg black
# set -g status-bg colour39
set -g status-bg colour15
set -g status-left " "
set -g status-right " "
set -g status-justify centre

# enable mouse
set -g mouse on

# fix termguicolors in neovim
set -g terminal-overrides ',xterm-256color:Tc'
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# fix C-left and C-right in zsh
set-window-option -g xterm-keys on

